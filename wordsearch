#!/usr/bin/env python3.10

import argparse

parser = argparse.ArgumentParser(description = 'Search for words including partial word')
parser.add_argument('snippet', help = 'partial (or complete) string to search for in words')

args = parser.parse_args()
snippet = args.snippet.lower()

with open('/usr/share/dict/words') as f:
    words = f.readlines()

#matches = []

#for word in words:
#   if snippet in word.lower():
#      matches.append(word)


matches = [word.strip() for word in words if snippet in word.lower()]
#^ this line of text functions exactly like lines 16-18 on a single line.
#words will be iterated through and populate the word variable (essentially assigning the snippets we designate upon command execution.
#i.e. contains "some word"
#if will then act as the body of our loop while snippet will be utilized everytime (because it is a variable outside of this loop). While the variable word will be populated with each iteration the loop goes through.
#the word found in the beginning of the loop is the same variable as the other word variable, which means it will be populated by the interation, however, with the .strip() method, it will remove \n characters that were printed when iterated through. (This is how lines 16-18 would print what was matched).

print(matches)
